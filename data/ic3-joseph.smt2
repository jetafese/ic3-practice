; (declare-rel Invariant (Bool Bool))
; (declare-rel Goal ())
; (declare-var x Bool)
; (declare-var y Bool)
; (declare-var xp Bool)
; (declare-var yp Bool)
; (rule (=> (not (or x y)) (Invariant x y)))
; (rule (=> (and (Invariant x y)
;   (= (ite x y y) yp)
;   (= (not x) xp)
;   ) (Invariant xp yp)))
; (rule (=> (and (Invariant x y) y) Goal))
; (query Goal)


(declare-rel Invariant (Int Int))
(declare-rel Goal ())
(declare-var x Int)
(declare-var y Int)
(declare-var xp Int)
(declare-var yp Int)
(rule (=> (not (or (not (= x 1)) (not (= y 1)))) (Invariant x y)))
(rule (=> (and (Invariant x y)
  (= (ite (= (mod x 2) 0) (+ x 1) (- x 1)) xp)
  (= (ite (= (mod x 2) 1) (+ y 2) (- y 2)) yp)
  ) (Invariant xp yp)))
(rule (=> (and (Invariant x y) (= (mod y 2) 0)) Goal))
(query Goal)
